name: Check Lua Version Bumps

on:
  pull_request:
    branches: [ actions_test ]

jobs:
  version-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Important for diffing

      - name: Check if modified .lua files have version updated
        run: |
          git fetch origin main
          CHANGED_LUA=$(git diff --name-only origin/main...HEAD -- '*.lua')
          ERROR_FILES=""

          for file in $CHANGED_LUA; do
            # Extract version line from the first few lines of the old and new file
            OLD_VERSION=$(git show origin/main:$file | head -n 10 | grep -oP 'v\d+\.\d+\.\d+' || true)
            NEW_VERSION=$(head -n 10 "$file" | grep -oP 'v\d+\.\d+\.\d+' || true)

            if [ "$OLD_VERSION" = "$NEW_VERSION" ]; then
              ERROR_FILES="$ERROR_FILES\n- $file (version not updated, still $NEW_VERSION)"
            fi
          done

          # Check ALYXLIB_VERSION specifically
          ALYX_INIT_FILE="scripts/vscripts/alyxlib/init.lua"
          OLD_ALYXLIB_VERSION=$(git show origin/main:$ALYX_INIT_FILE | grep -oP 'ALYXLIB_VERSION\s*=\s*"v\d+\.\d+\.\d+"' | grep -oP 'v\d+\.\d+\.\d+' || true)
          NEW_ALYXLIB_VERSION=$(grep -oP 'ALYXLIB_VERSION\s*=\s*"v\d+\.\d+\.\d+"' "$ALYX_INIT_FILE" | grep -oP 'v\d+\.\d+\.\d+' || true)
          
          if [ "$OLD_ALYXLIB_VERSION" = "$NEW_ALYXLIB_VERSION" ]; then
            ERROR_FILES="$ERROR_FILES\n- $ALYX_INIT_FILE (ALYXLIB_VERSION not updated, still $NEW_ALYXLIB_VERSION)"
          fi
          
          if [ -n "$ERROR_FILES" ]; then
            echo -e "❌ The following issues were found with version updates:$ERROR_FILES"
            echo "Please update the version numbers appropriately, including matching member versions."
            echo "Showing diffs for changed Lua files:\n"
            exit 1
          else
            echo "✅ All version checks passed."
          fi
